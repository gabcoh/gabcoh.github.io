{"version":3,"sources":["js/index.js"],"names":["collapse","element","sectionHeight","scrollHeight","elementTransition","style","transition","requestAnimationFrame","height","setAttribute","expand","addEventListener","e","removeEventListener","arguments","callee","onQuestionClick","ev","target","i","classList","contains","parentElement","children","length","matches","toggle","collapsable","nextElementSibling","getAttribute","elems","document","getElementsByClassName"],"mappings":"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","file":"js.00a46daa.js","sourceRoot":"..","sourcesContent":["function collapse(element) {\n  // get the height of the element's inner content, regardless of its actual size\n  var sectionHeight = element.scrollHeight;\n  \n  // temporarily disable all css transitions\n  var elementTransition = element.style.transition;\n  element.style.transition = '';\n  \n  // on the next frame (as soon as the previous style change has taken effect),\n  // explicitly set the element's height to its current pixel height, so we \n  // aren't transitioning out of 'auto'\n  requestAnimationFrame(function() {\n    element.style.height = sectionHeight + 'px';\n    element.style.transition = elementTransition;\n    \n    // on the next frame (as soon as the previous style change has taken effect),\n    // have the element transition to height: 0\n    requestAnimationFrame(function() {\n      element.style.height = 0 + 'px';\n    });\n  });\n  \n  // mark the section as \"currently collapsed\"\n  element.setAttribute('data-collapsed', 'true');\n}\n\nfunction expand(element) {\n  // get the height of the element's inner content, regardless of its actual size\n  var sectionHeight = element.scrollHeight;\n  \n  // have the element transition to the height of its inner content\n  element.style.height = sectionHeight + 'px';\n\n  // when the next css transition finishes (which should be the one we just triggered)\n  element.addEventListener('transitionend', function(e) {\n    // remove this event listener so it only gets triggered once\n    element.removeEventListener('transitionend', arguments.callee);\n    \n    // remove \"height\" from the element's inline styles, so it can return to its initial value\n    element.style.height = null;\n  });\n  \n  // mark the section as \"currently not collapsed\"\n  element.setAttribute('data-collapsed', 'false');\n}\n\nfunction onQuestionClick(ev) {\n  let target = ev.target;\n  let i = 0;\n  while (i < 5 && !target.classList.contains('question')) {\n    i++;\n    target = target.parentElement;\n  }\n  for (i = 0; i < target.children.length; i++) {\n    if (target.children[i].matches(\".fa.fa-arrow-down\")) {\n      target.children[i].classList.toggle(\"flip\");\n    }\n  }\n  let collapsable = target.nextElementSibling;\n  if (collapsable.getAttribute('data-collapsed') === 'true') {\n    expand(collapsable);\n  } else {\n    collapse(collapsable);\n  }\n}\n\nlet elems = document.getElementsByClassName(\"question\");\nfor (let i = 0; i < elems.length; i++) {\n  elems[i].addEventListener(\"click\", onQuestionClick);\n}\nelems = document.getElementsByClassName(\"answer\");\nfor (let i = 0; i < elems.length; i++) {\n  collapse(elems[i]);\n}\n"]}