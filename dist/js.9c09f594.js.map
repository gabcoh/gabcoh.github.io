{"version":3,"sources":["js/index.js"],"names":["collapse","element","sectionHeight","scrollHeight","elementTransition","style","transition","requestAnimationFrame","height","setAttribute","expand","addEventListener","e","removeEventListener","arguments","callee","onQuestionClick","ev","i","target","classList","contains","parentElement","children","length","matches","toggle","collapsable","nextElementSibling","getAttribute","elems","document","getElementsByClassName"],"mappings":";AAAA,SAASA,EAASC,GAEZC,IAAAA,EAAgBD,EAAQE,aAGxBC,EAAoBH,EAAQI,MAAMC,WACtCL,EAAQI,MAAMC,WAAa,GAK3BC,sBAAsB,WACpBN,EAAQI,MAAMG,OAASN,EAAgB,KACvCD,EAAQI,MAAMC,WAAaF,EAI3BG,sBAAsB,WACpBN,EAAQI,MAAMG,OAAS,UAK3BP,EAAQQ,aAAa,iBAAkB,QAGzC,SAASC,EAAOT,GAEVC,IAAAA,EAAgBD,EAAQE,aAG5BF,EAAQI,MAAMG,OAASN,EAAgB,KAGvCD,EAAQU,iBAAiB,gBAAiB,SAASC,GAEjDX,EAAQY,oBAAoB,gBAAiBC,UAAUC,QAGvDd,EAAQI,MAAMG,OAAS,OAIzBP,EAAQQ,aAAa,iBAAkB,SAGzC,SAASO,EAAgBC,GAGhBC,IAFHC,IAAAA,EAASF,EAAGE,OACZD,EAAI,EACDA,EAAI,IAAMC,EAAOC,UAAUC,SAAS,aACzCH,IACAC,EAASA,EAAOG,cAEbJ,IAAAA,EAAI,EAAGA,EAAIC,EAAOI,SAASC,OAAQN,IAClCC,EAAOI,SAASL,GAAGO,QAAQ,sBAC7BN,EAAOI,SAASL,GAAGE,UAAUM,OAAO,QAGpCC,IAAAA,EAAcR,EAAOS,mBAC0B,SAA/CD,EAAYE,aAAa,kBAC3BnB,EAAOiB,GAEP3B,EAAS2B,GAKb,IADA,IAAIG,EAAQC,SAASC,uBAAuB,YACnCd,EAAI,EAAGA,EAAIY,EAAMN,OAAQN,IAChCY,EAAMZ,GAAGP,iBAAiB,QAASK,GAErCc,EAAQC,SAASC,uBAAuB,UACxC,IAAK,IAAId,EAAI,EAAGA,EAAIY,EAAMN,OAAQN,IAChClB,EAAS8B,EAAMZ","file":"js.9c09f594.js","sourceRoot":"..","sourcesContent":["function collapse(element) {\n  // get the height of the element's inner content, regardless of its actual size\n  var sectionHeight = element.scrollHeight;\n  \n  // temporarily disable all css transitions\n  var elementTransition = element.style.transition;\n  element.style.transition = '';\n  \n  // on the next frame (as soon as the previous style change has taken effect),\n  // explicitly set the element's height to its current pixel height, so we \n  // aren't transitioning out of 'auto'\n  requestAnimationFrame(function() {\n    element.style.height = sectionHeight + 'px';\n    element.style.transition = elementTransition;\n    \n    // on the next frame (as soon as the previous style change has taken effect),\n    // have the element transition to height: 0\n    requestAnimationFrame(function() {\n      element.style.height = 0 + 'px';\n    });\n  });\n  \n  // mark the section as \"currently collapsed\"\n  element.setAttribute('data-collapsed', 'true');\n}\n\nfunction expand(element) {\n  // get the height of the element's inner content, regardless of its actual size\n  var sectionHeight = element.scrollHeight;\n  \n  // have the element transition to the height of its inner content\n  element.style.height = sectionHeight + 'px';\n\n  // when the next css transition finishes (which should be the one we just triggered)\n  element.addEventListener('transitionend', function(e) {\n    // remove this event listener so it only gets triggered once\n    element.removeEventListener('transitionend', arguments.callee);\n    \n    // remove \"height\" from the element's inline styles, so it can return to its initial value\n    element.style.height = null;\n  });\n  \n  // mark the section as \"currently not collapsed\"\n  element.setAttribute('data-collapsed', 'false');\n}\n\nfunction onQuestionClick(ev) {\n  let target = ev.target;\n  let i = 0;\n  while (i < 5 && !target.classList.contains('question')) {\n    i++;\n    target = target.parentElement;\n  }\n  for (i = 0; i < target.children.length; i++) {\n    if (target.children[i].matches(\".fa.fa-arrow-down\")) {\n      target.children[i].classList.toggle(\"flip\");\n    }\n  }\n  let collapsable = target.nextElementSibling;\n  if (collapsable.getAttribute('data-collapsed') === 'true') {\n    expand(collapsable);\n  } else {\n    collapse(collapsable);\n  }\n}\n\nlet elems = document.getElementsByClassName(\"question\");\nfor (let i = 0; i < elems.length; i++) {\n  elems[i].addEventListener(\"click\", onQuestionClick);\n}\nelems = document.getElementsByClassName(\"answer\");\nfor (let i = 0; i < elems.length; i++) {\n  collapse(elems[i]);\n}\n"]}